#!/usr/bin/env python3
"""Analyze logs generated by the experiments and organize results."""

import json
from pathlib import Path

import numpy as np

CURRENT_DIR = Path(__file__).parent
LOGS_DIR = CURRENT_DIR / "logs"
RESULTS_DIR = CURRENT_DIR / "results"

RESULTS_DIR.mkdir(exist_ok=True)


def analyze(f, name):
    num_active_arr = []
    num_total_arr = []
    copy_overhead_num = 0
    copy_overhead_total = 0

    for line in f:
        if line.startswith("#CS243F#,"):
            num_active, num_total = line[9:].split(",")
            num_active_arr.append(int(num_active))
            num_total_arr.append(int(num_total))
        elif line.startswith("#CS243O#,"):
            copy_overhead_num += 1
            copy_overhead_total += int(line[9:])

    num_active_arr = np.asarray(num_active_arr)
    num_total_arr = np.asarray(num_total_arr)

    with (RESULTS_DIR / f"{name}-frag.npy").open("wb") as ffrag:
        np.save(ffrag, num_active_arr)
        np.save(ffrag, num_total_arr)

    return dict(
        copy_overhead_num=copy_overhead_num,
        copy_overhead_total=copy_overhead_total,
    )


def main():
    all_results = {}

    for path in LOGS_DIR.glob("bench--*.stdout.log"):
        name = path.name[7:-11]
        with path.open("r", encoding="utf-8") as f:
            results = analyze(f, name)
            all_results[name] = results

    with (RESULTS_DIR / "analyze.json").open("w", encoding="utf-8") as f:
        json.dump(all_results, f, indent=2)


if __name__ == "__main__":
    main()
